---

# == Notes ==

# - GitLab automatically passes artifacts from previous stages by default
# - Set required secret variables at: https://gitlab.data.bas.ac.uk/uk-pdc/metadata-infrastructure/metadata-generator/settings/ci_cd

# = Secret variables
# - Variables are grouped by section in KEY: "value" format (e.g. FOO: "bar")
#   Sensitive values are represented by "[Sensitive]"
#
# - AWS IAM id/secret keys for 'bas-gitlab-ci-bas-metadata-generator' user
# > AWS_ACCESS_KEY_ID: "[Sensetive]"
# > AWS_SECRET_ACCESS_KEY: "[Sensetive]"
#
# - PyPi (production) - create tokens at https://pypi.org/manage/account/
# > PYPI_TOKEN (protected): "[Sensitive]"
#
# - PyPi (staging) - create tokens at https://test.pypi.org/manage/account/
# > PYPI_TEST_TOKEN (protected): "[Sensitive]"
#
# - GitLab - create token as the 'bot_magic_ci' user
# > GITLAB_ACCESS_TOKEN: "[Sensitive]"

# == Global settings ==

stages:
  - 🧪 test
  - 🏗 build
  - 🚚 publish

variables:
  APP_NAME: bas-metadata-library
  S3_SCHEMA_BUCKET_STAGE: metadata-standards-testing.data.bas.ac.uk
  S3_SCHEMA_BUCKET_PROD: metadata-standards.data.bas.ac.uk

image:
  name: docker-registry.data.bas.ac.uk/uk-pdc/metadata-infrastructure/metadata-generator:latest
  entrypoint: [""]

# == Jobs ==

test-app:
  stage: 🧪 test
  variables:
    FLASK_ENV: testing
    FLASK_APP: ./manage.py
  script:
    - "pytest -o junit_family=xunit2 --junitxml=test-results.xml --random-order"
  artifacts:
    reports:
      junit: test-results.xml

coverage-app:
  stage: 🧪 test
  variables:
    FLASK_ENV: testing
    FLASK_APP: ./manage.py
  script:
    - "pytest --random-order --cov=bas_metadata_library --cov-fail-under=100 ."
    - "coverage html"
  artifacts:
    name: "$CI_BUILD_TOKEN-coverage"
    paths:
      - htmlcov
    expire_in: 1 month

pep8-app:
  stage: 🧪 test
  script:
    - "black --check bas_metadata_library/"

bandit-app:
  stage: 🧪 test
  script:
    - "bandit -r . -x './tests'"

build-dev:
  stage: 🏗 build
  script:
    - 'poetry build'
  artifacts:
    name: "$CI_BUILD_TOKEN-build"
    paths:
      - dist
    expire_in: 1 week
  except:
    - master
    - tags

publish-app-stage:
  stage: 🚚 publish
  before_script:
    - "poetry config pypi-token.pypi-testing $PYPI_TEST_TOKEN --local"
  script:
    - "poetry publish --build --repository pypi-testing --no-interaction"
  artifacts:
    name: "$CI_BUILD_TOKEN-build"
    paths:
      - dist
    expire_in: 1 month
  only:
    - master
  environment:
    name: staging
    url: https://test.pypi.org/project/bas-metadata-library/

publish-app-prod:
  stage: 🚚 publish
  before_script:
    - "poetry config pypi-token.pypi $PYPI_TOKEN --local"
  script:
    - "poetry publish --build --repository pypi --no-interaction"
  artifacts:
    name: "$CI_BUILD_TOKEN-build"
    paths:
      - dist
    expire_in: 1 month
  only:
    - tags
  environment:
    name: production
    url: https://pypi.org/project/bas-metadata-library/

publish-schemas-stage:
  stage: 🚚 publish
  image:
    name: governmentpaas/awscli:latest
    entrypoint: [""]
  script:
    - "aws s3 cp bas_metadata_library/schemas/dist/iso_19115_1_v1.json s3://$S3_SCHEMA_BUCKET_STAGE/bas-metadata-generator-configuration-schemas/v2/iso-19115-1-v1.json"
    - "aws s3 cp bas_metadata_library/schemas/dist/iso_19115_2_v1.json s3://$S3_SCHEMA_BUCKET_STAGE/bas-metadata-generator-configuration-schemas/v2/iso-19115-2-v1.json"
    - "aws s3 cp bas_metadata_library/schemas/dist/iso_19115_1_v2.json s3://$S3_SCHEMA_BUCKET_STAGE/bas-metadata-generator-configuration-schemas/v2/iso-19115-1-v2.json"
    - "aws s3 cp bas_metadata_library/schemas/dist/iso_19115_2_v2.json s3://$S3_SCHEMA_BUCKET_STAGE/bas-metadata-generator-configuration-schemas/v2/iso-19115-2-v2.json"
  only:
    - master

publish-schemas-prod:
  stage: 🚚 publish
  image:
    name: governmentpaas/awscli:latest
    entrypoint: [""]
  script:
    - "aws s3 cp bas_metadata_library/schemas/dist/iso_19115_1_v1.json s3://$S3_SCHEMA_BUCKET_PROD/bas-metadata-generator-configuration-schemas/v2/iso-19115-1-v1.json"
    - "aws s3 cp bas_metadata_library/schemas/dist/iso_19115_2_v1.json s3://$S3_SCHEMA_BUCKET_PROD/bas-metadata-generator-configuration-schemas/v2/iso-19115-2-v1.json"
    - "aws s3 cp bas_metadata_library/schemas/dist/iso_19115_1_v2.json s3://$S3_SCHEMA_BUCKET_PROD/bas-metadata-generator-configuration-schemas/v2/iso-19115-1-v2.json"
    - "aws s3 cp bas_metadata_library/schemas/dist/iso_19115_2_v2.json s3://$S3_SCHEMA_BUCKET_PROD/bas-metadata-generator-configuration-schemas/v2/iso-19115-2-v2.json"
  only:
    - tags
